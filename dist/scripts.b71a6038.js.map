{"version":3,"sources":["modules/requests.js","modules/date-time.js","modules/ui.js","modules/DOM.js","modules/data.js","modules/rendering.js","modules/events.js","scripts.js"],"names":["endpoint","request","fetch","method","headers","returnDate","date","_Date","Date","isNaN","settings","year","month","day","toLocaleDateString","statisticsui","stats","sort","a","b","confirmed","map","statistic","index","statisticUI","join","country","lastUpdate","deaths","Math","round","container","document","querySelector","totalCases","searchInput","getElementById","statistics","setStatistics","data","renderStatistics","total","reduce","stat","innerText","innerHTML","handleSearch","event","results","filter","toLowerCase","includes","target","value","addEventListener","then","response","json","covid19Stats","group","currentCountry","existingGroup","find","recovered","catch","error","console","message"],"mappings":";;AMAA,ACAA;;ADCA,ACAA;;AJDO,AGEP,ANFA,AOEA,IJFa+B,AHAP/B,QAAQ,CGAQ,EHCpB,CGDuBgC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB,iCHAP;ACAO,AIAP,ALGO,AEHP,IDAa5B,ADGAJ,OAAO,GCHG,ADGAC,GCHG,EDGE,CAACF,MCHhBK,EDGe,EAAW,MCHb,CAAAC,IAAI,EAAI;AEC3B,AFAL,AKGF,ANAEH,AODF,EPCEA,EGHW+B,EFAL3B,EDGA,CMACuC,CNAC,CCHG,GEAU,AFAP,CDEuB,EGFbd,CFANxB,GKGpB,CLHgB,AKGMuC,CLHGzC,EEAS,CAAC2B,CFAnB,AKGhB,CLHE,CKG2B,UHHH,CAAuB,QAAvB,CAAnB;AGIL,ADJF,ALIE7B,AEHK,EFGLA,EEHWW,EIGLiC,GNAC,EAAE,EMAI,GAAGX,AJHO,GAAG,SAAftB,KIGgBkC,MAAX,CAAkB,AJHR,CAAAjC,KAAK,UIGoB;AHH9C,AFCL,AKEmD,ANCjD,AEJ6B,ICApBmB,EFCP1B,EKEiCiB,GLF5B,CAACnB,GEDY,AGG6B,ELF1C,CEDgByB,AFCzB,EAAkB,GKEmBN,ANChB,GGJY,CAACU,GGGiB,WHH1B,CAAwB,OAAxB,CAApB,qBHGI,8PEOLpB,KAAK,CACJC,IADD,CACM,UAACC,CAAD,EAAIC,CAAJ;ADRV,AKCE,ADJJ,ALKI,AEMQ,MDRJT,KKCGgB,AJOYR,CAAC,CAACE,CDRT,GAAG,CKCD,CAAC8B,GNCG,AEMC,GAAc/B,CAAC,CAACC,GIP5B,GAAsB+B,GJOV,GAA4B,CAAC,CIPzC,AJOY,CIPmBJ,EJOc,CAA5C,EIPmC,CAACK,MAAN,CAAaC,KAAb,CAAmBH,WAAnB,EAA/B,CAAP;ALDiBvC,AKElB,ANFQ,AEQC,GIRM,AJOZ,CDPeA,AKAnB,CJSKU,GDTkB,ACOnB,CAEK,CDTgB,SAAR,ACSPC,SAAD,EAAYC,KAAZ;ADT2BX,ADFC,AEW5B,CFXiB,CAArB,ECE+BA,KAAK,EAAE,ACSZY,MDTd,KCSyB,CAACF,SAAD,EAAYC,KAAZ,CAAjC;ADT0CV,AKInD,AJKS,GAFL,CDP+CA,CCU9CY,EDViD,EAAE,ACOpD,CAGM,EAHN,CAV2B,sBIOduB,OAAjB;AFTK,AHKY,AKKlB,AJRgC,CAA1B,EDGL,CGLSX,UAAU,GAAG,EAAjB;AHML,SAAO9B,KAAK,CAACO,kBAAN,CAAyB,OAAzB,EAAkCJ,QAAlC,CAAP;AACD,AKKD,CLZO,GKYH,CAACyB,gBAAL,EAAkB;AFVX,AEWL,ACRF,IHHaG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AACnC,AEWD,AJKD,AKbEtC,ILaIuB,WAAW,GAAG,EKZf+B,GHJHlB,CGGA,CACQ,ELYJb,MEhBM,EGIFgC,GLYU,KKZF,ELY+CjC,KAA7C,KEhBDgB,IAAP,CAAV;AACD,AFemB,AKZF,CHLX,KFiBgBb,KKZD8B,ELYF,MKZU,CAACC,CLYR/B,GKZD,EAAJ,ELYE;AIHpBS,ADZO,AHea,AKZF,GADhB,CFFWK,CEIRe,CLW2B5B,GKb9B,CAEQ,MLWU,CIHR2B,GDZiB,GAAG,CHeA3B,EKXR,MFJXa,CCYb,CAA6B,AJGT,OIHpB,EAAsCM,KDZN,CAAA9B,KAAK,CCYrC,CDZyC,CCYW,IAApD;ADXE,AHckB,AKXI,MFHhByB,AHcoCrB,EKX/BmB,GFHA,CEGW,EFHR,CHcI,KKXPA,GLW+BnB,CKXpB,QLWJ,CGdAiB,gBAAJ,EAAgBK,MAAhB,CAAuB,UAACD,KAAD,EAAQE,IAAR,EAAiB;AACpD,AHagB,AKVd,MLUiDf,EKV3CS,GFHDI,CHaS,IGbJ,EEGM,CFHHE,CHaoCf,CKV9BW,EFHF,CAACnB,CEGK,CLUT,AKVUsC,OFH1B,KEGqB,CAChBT,MADgB,CACT;AFHb,AHYiB,AKTJ,GFLA,EAEX,CAFW,CAAd,GEKiB7B,SAAH,SAAGA,SAAH,CLWFG,KAAK,GAAG,CAFF,gCAGNG,OAHM,wEAIgCN,SAJhC,kFAK0CQ,MAL1C,uDAOVA,MAAM,aAAMC,IAAI,CAACC,KAAL,CAAYF,MAAM,GAAG,GAAV,GAAiBR,SAA5B,CAAN,cAPI,gCASN,0BAAWO,UAAX,CATM;AAAA,AKTJ,CLShB,YKTmCP,SAAS,GAAG,CAA/B;AFDdc,AECc,KADS,EAEhBQ,MAFgB,CAET,IFFHE,MEEIP,GFFf,GAAuBI,IEET,CFFd,CEE2BkB,KAAb,EAAuB;AFDrC5B,AECqC,UACZ6B,OFFff,OEC2B,EFDrC,CEE4Cc,EFFtB,GECe,CACrBjC,OADqB,WFDFV,KAAb,CAAtB;AACD,AEGS,CFVH,SEUS6C,aAAa,GAAGxB,UAAU,CAACyB,IAAX,CACpB;AAAA,YAAGpC,OAAH,SAAGA,OAAH;AAAA,eAAiBA,OAAO,KAAKkC,cAA7B;AAAA,OADoB,CAAtB;;AAIA,UAAIC,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACzC,SAAd,IAA2BuC,KAAK,CAACvC,SAAjC;AACAyC,QAAAA,aAAa,CAACjC,MAAd,IAAwB+B,KAAK,CAAC/B,MAA9B;AACAiC,QAAAA,aAAa,CAACE,SAAd,IAA2BJ,KAAK,CAACI,SAAjC;AACD;;AAED,aAAOF,aAAa,sBAAOxB,UAAP,iCAAyBA,UAAzB,IAAqCsB,KAArC,EAApB;AACD,KAhBgB,EAgBd,EAhBc,CAAnB;AAkBA,6BAActB,UAAd;AAEA,WAAOA,UAAP;AACD,GAxBH,EAyBGkB,IAzBH,CAyBQ,UAAAlB,UAAU;AAAA,WAAI,iCAAiBA,UAAjB,CAAJ;AAAA,GAzBlB,EA0BG2B,KA1BH,CA0BS,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,GA1Bd;AA2BD","file":"scripts.b71a6038.js","sourceRoot":"..","sourcesContent":["const endpoint =\n  \"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats\";\n\nexport const request = fetch(endpoint, {\n  method: \"GET\",\n  headers: {\n    \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n    \"x-rapidapi-key\": \"6355586673mshe6fe75562f6751dp1f288cjsn9deb12384837\"\n  }\n});\n","export const returnDate = date => {\n  const _Date = new Date(date);\n\n  if (isNaN(_Date)) return;\n\n  const settings = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return _Date.toLocaleDateString(\"en-us\", settings);\n};\n","import { returnDate } from \"./date-time\";\n\nexport const statisticsui = stats => `\n  <table>\n  <tr>\n    <th>#</th>\n    <th>🌍 Country</th>\n    <th class=\"bg--orange text--center\">✔ Confirmed</th>\n    <th class=\"bg--red text--center\">☠️Deaths</th>\n    <th class=\"text--center\">Mortality Rate</th>\n    <th>📅 Last Updated</th>\n  </tr>\n    ${stats\n      .sort((a, b) => (a.confirmed > b.confirmed ? -1 : 1))\n      .map((statistic, index) => statisticUI(statistic, index))\n      .join(\"\")}\n  </table>\n`;\n\nconst statisticUI = ({ country, lastUpdate, confirmed, deaths }, index) =>\n  ` <tr>\n        <td>${index + 1}</td>\n        <td>${country}</td>\n        <td class=\"bg--orange-light text--center\">${confirmed}</td>\n        <td class=\"bg--red-light text--center text--strong\">${deaths}</td>\n        <td class=\"text--center\">${\n          deaths ? `${Math.round((deaths * 100) / confirmed)}%` : `N/A`\n        }</td>\n        <td>${returnDate(lastUpdate)}</td>\n    </tr>\n  `;\n","export const container = document.querySelector(\".root\");\nexport const totalCases = document.querySelector(\".total\");\nexport const searchInput = document.getElementById(\"query\");\n","export let statistics = [];\n\nexport const setStatistics = data => {\n  statistics = [...data];\n};\n","import { statisticsui } from \"./ui\";\nimport { totalCases, container } from \"./DOM\";\nimport { statistics } from \"./data\";\n\nexport const renderStatistics = stats => {\n  const total = [...statistics].reduce((total, stat) => {\n    return total + stat.confirmed;\n  }, 0);\n\n  totalCases.innerText = total;\n  container.innerHTML = statisticsui(stats);\n};\n","import { searchInput } from \"./DOM\";\nimport { statistics, setStatistics } from \"./data\";\nimport { renderStatistics } from \"./rendering\";\n\nfunction handleSearch(event) {\n  const results = statistics.filter(({ country }) => {\n    return country.toLowerCase().includes(event.target.value.toLowerCase());\n  });\n\n  renderStatistics(results);\n}\n\nif (!searchInput) {\n  return;\n}\n\nsearchInput.addEventListener(\"keyup\", handleSearch, true);\n","import { request } from \"./modules/requests\";\nimport { renderStatistics } from \"./modules/rendering\";\nimport { setStatistics } from \"./modules/data\";\nimport \"./modules/events\";\n\n{\n  request\n    .then(response => response.json())\n    .then(({ data }) => {\n      const statistics = data.covid19Stats\n        .filter(({ confirmed }) => confirmed > 0)\n        .reduce((statistics, group) => {\n          const { country: currentCountry } = group;\n\n          const existingGroup = statistics.find(\n            ({ country }) => country === currentCountry\n          );\n\n          if (existingGroup) {\n            existingGroup.confirmed += group.confirmed;\n            existingGroup.deaths += group.deaths;\n            existingGroup.recovered += group.recovered;\n          }\n\n          return existingGroup ? [...statistics] : [...statistics, group];\n        }, []);\n\n      setStatistics(statistics);\n\n      return statistics;\n    })\n    .then(statistics => renderStatistics(statistics))\n    .catch(error => console.error(error.message));\n}\n"]}
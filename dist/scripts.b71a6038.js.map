{"version":3,"sources":["modules/requests.js","modules/date-time.js","modules/templates.js","modules/DOM.js","scripts.js"],"names":["endpoint","request","fetch","method","headers","returnDate","date","_Date","Date","isNaN","settings","year","month","day","toLocaleDateString","statisticsui","stats","map","statistic","statisticUI","sort","a","b","confirmed","join","country","lastUpdate","deaths","Math","floor","container","document","querySelector","renderStatistics","statistics","innerHTML","then","response","json","data","covid19Stats","filter","reduce","group","currentCountry","existingGroup","find","recovered","statitistics","catch","error","console","message"],"mappings":";;AIAA;;AACA;;AJDA,IAAMA,QAAQ,GACZ,iEADF;AGAA,AFAO,ADGA,AEHP,IDAaK,ADGAJ,OAAO,GCHG,ADGAC,GCHG,EDGE,CAACF,MCHhBK,EDGe,EAAW,MCHb,CAAAC,IAAI,EAAI;AAChC,ADGAH,EAAAA,ICHMI,EDGA,EAAE,CCHG,GAAG,CDEuB,GCFnBC,IAAJ,CAASF,IAAT,CAAd;AECF,AHGEF,AEHK,EFGLA,EGHI0B,ADAOf,KFGJ,EAAE,EGHI,GAAGgB,ADAO,GAAG,KCAF,CAACC,GDAdjB,UCAK,CAAuB,CDAb,CAAAC,GCAV,CAAlB,CDAiC;ADC/B,ADGE,AEJ6B,MDC3BP,KAAK,CAACF,KAAD,CAAT,EAAkB,GDGG,yBEFjBS,KAAK,CACJC,GADD,CACK,UAAAC,GFAA,MEAS;ACDb,AFCL,ADEE,AEFgB,ICDPe,EFCLvB,KCAgBS,GDAR,GAAG,GEDU,EHGP,AEFa,CCDH,ADCID,SCDvBe,ADCsB,CAAf,eCDY,CAAAC,UAAU,EAAI;AAC5CJ,AFAmBnB,ADAV,AEAS,ECAlBmB,CDDI,CDCenB,CCCdS,GDDkB,CCDnB,CDCqB,ACCf,CCDD,CAACe,OFAO,CCCNd,CCDX,ADCU,EAAIC,CCDQ,ADCZ,6BCDyBY,UAAb,CAAtB;AACD,AFDqCtB,ADFC,AEG3B,CCFL,AHDqB,CAArB,ECE+BA,KAAK,EAAE,ACCtBS,CAAC,CAACE,IDDN,KCCI,GAAcD,CAAC,CAACC,SAAhB,GAA4B,CAAC,CAA7B,GAAiC,CAA5C;ADDyCV,ACCzC,AEHZ,GFCM,CDC+CA,CCE9CW,EDFiD,EAAE,ACDpD,CAGM,EAHN,CAF2B;ADGd,ACHc,AEE/BvB,CFFK,EDGL,iBGAGmC,IADH,CACQ,UAAAC,QAAQ;AHChB,AGDgB,SHCT9B,EGDa8B,GHCR,CAACvB,IGDe,CAACwB,IAAT,EAAJ,OHCT,CAAyB,OAAzB,EAAkC5B,QAAlC,CAAP;AACD,AGFiB,CHLX,EGIL,EAEG0B,IAFH,CAEQ;AAAA,QAAGG,IAAH,QAAGA,IAAH;AFKV,AELU,IFKJpB,OEJAoB,IFIW,AEJP,CAACC,EFIS,SAAdrB,CEJA,CACGsB,MADH,CACU,EFGI;AAAA,AEHJ,MFGOhB,IEHJF,GFGC,MEHJ,EFGOE,OAAH,AEHDF,SAAH;AFGI,AEHJ,MFGgBG,OEHGH,GFGf,MEHwB,EFGZG,CEHe,CAA/B,QFGI;AAAA,AEHJ,KADV,CFIsCH,CEFnCmB,MAFH,CAEU,CFEI,QAAwBnB,CEF3BW,QFEG,EEFJ,EAAaS,KAAb,EAAuB;AFEnB,AEFmB,MFEgBhB,IED5BiB,EFCP,QAAmCjB,IEFhB,EFEnB,CED0BgB,KADP,CACrBlB,OADqB;AFEnB,AECV,UAAMoB,aAAa,GAAGX,UAAU,CAACY,IAAX,CACpB,sDFEKrB,OAJG,4CAKJF,SALI,2DAMJI,MANI,eAMOC,IAAI,CAACC,KAAL,CACtBF,MAAM,GAAG,GAAV,GAAiBJ,SADM,CANP,sBAQL,0BAAWG,UAAX,CARK;AAAA,AEER,CFFZ,WEEeD,OAAH,SAAGA,OAAH;AAAA,eAAiBA,OAAO,KAAKmB,cAA7B;AAAA,OADoB,CAAtB;;AAIA,UAAIC,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACtB,SAAd,IAA2BoB,KAAK,CAACpB,SAAjC;AACAsB,QAAAA,aAAa,CAAClB,MAAd,IAAwBgB,KAAK,CAAChB,MAA9B;AACAkB,QAAAA,aAAa,CAACE,SAAd,IAA2BJ,KAAK,CAACI,SAAjC;AACD;;AAED,aAAOF,aAAa,sBAAOX,UAAP,iCAAyBA,UAAzB,IAAqCS,KAArC,EAApB;AACD,KAhBH,EAgBK,EAhBL,CADI;AAAA,GAFR,EAqBGP,IArBH,CAqBQ,UAAAY,YAAY;AAAA,WAAI,2BAAiBA,YAAjB,CAAJ;AAAA,GArBpB,EAsBGC,KAtBH,CAsBS,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,GAtBd;AAuBD","file":"scripts.b71a6038.js","sourceRoot":"..","sourcesContent":["const endpoint =\n  \"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats\";\n\nexport const request = fetch(endpoint, {\n  method: \"GET\",\n  headers: {\n    \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n    \"x-rapidapi-key\": \"6355586673mshe6fe75562f6751dp1f288cjsn9deb12384837\"\n  }\n});\n","export const returnDate = date => {\n  const _Date = new Date(date);\n\n  if (isNaN(_Date)) return;\n\n  const settings = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return _Date.toLocaleDateString(\"en-us\", settings);\n};\n","import { returnDate } from \"./date-time\";\n\nexport const statisticsui = stats => `\n  <ul class=\"grid\">\n    ${stats\n      .map(statistic => statisticUI(statistic))\n      .sort((a, b) => (a.confirmed > b.confirmed ? -1 : 1))\n      .join(\"\")}\n  </ul>\n`;\n\nconst statisticUI = ({ country, lastUpdate, confirmed, deaths }) =>\n  `\n    <li>\n      <div class=\"stat  grid__item\">\n        <h2>üåç ${country}</h2>\n        <p>‚ò£Ô∏è ${confirmed} confirmed cases</p>\n        <p>‚ò†Ô∏è ${deaths} (${Math.floor(\n    (deaths * 100) / confirmed\n  )}%) as of ${returnDate(lastUpdate)}</p>\n      </div>\n    </li>\n  `;\n","import { statisticsui } from \"./templates\";\n\nconst container = document.querySelector(\"div\");\n\nexport const renderStatistics = statistics => {\n  container.innerHTML = statisticsui(statistics);\n};\n","import { request } from \"./modules/requests\";\nimport { renderStatistics } from \"./modules/DOM\";\n\n{\n  request\n    .then(response => response.json())\n    .then(({ data }) =>\n      data.covid19Stats\n        .filter(({ confirmed }) => confirmed > 0)\n        .reduce((statistics, group) => {\n          const { country: currentCountry } = group;\n\n          const existingGroup = statistics.find(\n            ({ country }) => country === currentCountry\n          );\n\n          if (existingGroup) {\n            existingGroup.confirmed += group.confirmed;\n            existingGroup.deaths += group.deaths;\n            existingGroup.recovered += group.recovered;\n          }\n\n          return existingGroup ? [...statistics] : [...statistics, group];\n        }, [])\n    )\n    .then(statitistics => renderStatistics(statitistics))\n    .catch(error => console.error(error.message));\n}\n"]}